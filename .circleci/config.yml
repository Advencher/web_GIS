# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:5.6.40
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:3

    steps:
      - checkout

      #- run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev
      #- run: sudo docker-php-ext-install pdo_pgsql
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn


      - run: sudo apt-get install -y libpq-dev
      - run: sudo docker-php-ext-install pdo pdo_pgsql pgsql

      #- run: sudo docker-php-ext-install pdo pdo_pgsql

      - run:
          name: LS /usr/local/etc/php
          command: |
            ls -al /usr/local/etc/php
      - run:
          name: sed /usr/local/etc/php/php.ini-development
          command: |
            sudo sed -i 's/.*;extension=pdo_pgsql.*/extension=pdo_pgsql/g' /usr/local/etc/php/php.ini-development
      - run:
          name: sed php.ini-production
          command: |
            sudo sed -i 's/.*;extension=pdo_pgsql.*/extension=pdo_pgsql/g' /usr/local/etc/php/php.ini-production
      - run:
          name: cat php.ini-development
          command: |
            cat -n /usr/local/etc/php/php.ini-development
      - run:
          name: cat php.ini-production
          command: |
             cat -n /usr/local/etc/php/php.ini-production

      - run: ./vendor/bin/phpunit 